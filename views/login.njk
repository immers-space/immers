{% extends "layout.njk" %}

{% block contentTitle %}Login to your immers profile{% endblock %}
{% block content %}
  <div class="aesthetic-windows-95-tabbed-container">
    <div class="aesthetic-windows-95-tabbed-container-tabs">
      <div id="show-login" class="aesthetic-windows-95-tabbed-container-tabs-button is-active">
        <button type="button">
          Login
        </button>
      </div>
      <div id="show-register" class="aesthetic-windows-95-tabbed-container-tabs-button">
        <button type="button">
          Register
        </button>
      </div>
    </div>

    <div class="aesthetic-windows-95-container">
      <div id="login-form" class="aesthetic-windows-95-container-indent">
        <form action="/auth/login" method="post">
          <input id="username" name="username" type="hidden"/>
          <div class="form-item">
            <label>Immers handle:</label>
            <input id="handle" class="aesthetic-windows-95-text-input"
                  type="text" name="handle"
                  placeholder="username@your.immer"/>
          </div>
          <div id="password" class="form-item hidden">
            <label>Password:</label>
            <input class="aesthetic-windows-95-text-input" type="password" name="password" />
          </div>
          <div id="remote-cue" class="form-item hidden">
              You will be redirected to your home immer to login
          </div>
          <div id="error-cue" class="form-item hidden">
              <span class="aesthetic-effect-text-glitch"
                    style="color: #FF6AD5"
                    data-glitch="Please check your handle and try again">
                Please check your handle and try again
              </span>
          </div>
          <div class="form-item">
            <span id="next" class="aesthetic-windows-95-button">
              <button type="button">Check</button>
            </span>
            <span id="submit" class="aesthetic-windows-95-button none">
              <button type="submit">Login</button>
            </span>
            <span id="redirect" class="aesthetic-windows-95-button none">
              <button type="button" onclick="doRedirect">Proceed</button>
            </span>
          </div>
        </form>
      </div>
      <div id="register-form" class="aesthetic-windows-95-container-indent none">
        <form action="/auth/user" method="post">
          <div class="form-item">
            <label>User name:</label>
            <input class="aesthetic-windows-95-text-input"
                   type="text" name="preferredUsername"
                   required pattern="[A-Za-z0-9_-]+" title="Letters, numbers, &amp; dashes only"/>
          </div>
          <div class="form-item">
            <label>Display name:</label>
            <input id="handle" class="aesthetic-windows-95-text-input"
                  type="text" name="name"
                  required/>
          </div>
          <div class="form-item">
            <label>Password:</label>
            <input class="aesthetic-windows-95-text-input"
                   type="password" name="password"
                   required/>
          </div>
          <div class="form-item">
            <span class="aesthetic-windows-95-button">
              <button type="submit">Sign up</button>
            </span>
          </div>
        </form>
      </div>
    </div>
  </div>
{% endblock %}
{% block script%}
  <script>
    // tab toggle
    const togLogin = document.getElementById('show-login')
    const togRegister = document.getElementById('show-register')
    const tabLogin = document.getElementById('login-form')
    const tabRegister = document.getElementById('register-form')
    togLogin.addEventListener('click', evt => {
      togLogin.classList.add('is-active')
      tabLogin.classList.remove('none')
      togRegister.classList.remove('is-active')
      tabRegister.classList.add('none')
      evt.preventDefault()
    })
    togRegister.addEventListener('click', evt => {
      togRegister.classList.add('is-active')
      tabRegister.classList.remove('none')
      togLogin.classList.remove('is-active')
      tabLogin.classList.add('none')
      evt.preventDefault()
    })
    // login action
    const username = document.getElementById('username')
    const handle = document.getElementById('handle')
    const pwd = document.getElementById('password')
    const nextBtn = document.querySelector('#next button')
    const submit = document.getElementById('submit')
    const remoteCue = document.getElementById('remote-cue')
    const redirect = document.getElementById('redirect')
    const errorCue = document.getElementById('error-cue')
    let currentState
    function setLoginState (state) {
      // ignore event handler events
      if (typeof state !== 'string') { state = null }
      if (state === 'remote') {
        remoteCue.classList.remove('hidden')
        redirect.classList.remove('none')
      } else {
        remoteCue.classList.add('hidden')
        redirect.classList.add('none')
      }
      if (state === 'local') {
        pwd.classList.remove('hidden')
        submit.classList.remove('none')
      } else {
        pwd.classList.add('hidden')
        submit.classList.add('none')
      }
      if (state === 'error') {
        errorCue.classList.remove('hidden')
      } else {
        errorCue.classList.add('hidden')
      }
      if (!state && handle.value) {
        nextBtn.removeAttribute('disabled')
      } else {
        nextBtn.setAttribute('disabled', true)
      }
      currentState = state
    }
    tabLogin.addEventListener('submit', function loginSubmit (event) {
      if (currentState === 'local') { return } // submit form
      event.preventDefault()
      if (currentState === 'remote') {
        doRedirect()
      } else {
        lookup()
      }
      return false
    })
    // lookup user
    handle.addEventListener('input', setLoginState)
    nextBtn.addEventListener('click', lookup)

    function lookup () {
      document.body.classList.add('fetching')
      const url = new URL(`https://${window.location.host}/auth/home`)
      url.search = new URLSearchParams({ handle: handle.value }).toString()
      let state
      window.fetch(url)
        .then(res => res.json())
        .then(res => {
          if (res.username) {
            username.value = res.username
            state = 'local'
          } else if (res.redirect) {
            // go to auth flow at users home immer, returning to this hub after
            window.redirectUri = res.redirect
            state = 'remote'
          } else {
            state = 'error'
          }
        })
        .catch(err => { state = 'error' })
        .then(() => {
          document.body.classList.remove('fetching')
          setLoginState(state)
        })
    }
    function doRedirect () {
      if (redirectUri) {
        window.location = redirectUri
      }
    }
    setLoginState()
  </script>
{% endblock %}
