{% extends "layout.njk" %}

{% block contentTitle %}Login to your immers profile{% endblock %}
{% block content %}
  <div class="aesthetic-windows-95-tabbed-container">
    <div class="aesthetic-windows-95-tabbed-container-tabs">
      <div id="show-login" class="aesthetic-windows-95-tabbed-container-tabs-button is-active">
        <button type="button">
          Login
        </button>
      </div>
      <div id="show-register" class="aesthetic-windows-95-tabbed-container-tabs-button">
        <button type="button">
          Register
        </button>
      </div>
      <div id="show-vr" class="aesthetic-windows-95-tabbed-container-tabs-button">
        <button type="button">
          VR
        </button>
      </div>
    </div>

    <div class="aesthetic-windows-95-container">
      <div id="login-form" class="aesthetic-windows-95-container-indent">
        <form>
          <div id="token-error-cue" class="form-item hidden">
              <span class="aesthetic-effect-text-glitch"
                    style="color: #FF6AD5"
                    data-glitch="Unable to login. Please try again.">
                Unable to login. Please try again.
              </span>
          </div>
          <div class="form-item">
            <label>Immers handle:</label>
            <input id="handle" class="aesthetic-windows-95-text-input"
                  type="text" name="handle"
                  placeholder="username@your.immer"/>
          </div>
          <div id="emailed-cue" class="form-item hidden">
              Please check your email for a login link.<br>You may close this tab.
          </div>
          <div id="remote-cue" class="form-item hidden">
              You will be redirected to your home immer to login
          </div>
          <div id="error-cue" class="form-item hidden">
              <span class="aesthetic-effect-text-glitch"
                    style="color: #FF6AD5"
                    data-glitch="Please check your handle and try again">
                Please check your handle and try again
              </span>
          </div>
          <div class="form-item">
            <span id="next" class="aesthetic-windows-95-button">
              <button type="button">Check</button>
            </span>
            <span id="submit" class="aesthetic-windows-95-button none">
              <button type="submit">Login</button>
            </span>
            <span id="redirect" class="aesthetic-windows-95-button none">
              <button type="button">Proceed</button>
            </span>
          </div>
        </form>
      </div>
      <div id="register-form" class="aesthetic-windows-95-container-indent none">
        <form action="/auth/user" method="post">
          <div class="form-item relative">
            <label>User name:</label>
            <input class="aesthetic-windows-95-text-input"
                   type="text" name="username"
                   required pattern="^[A-Za-z0-9-]{3,32}$"
                   title="Letters, numbers, &amp; dashes only, between 3 and 32 characters"/>
            <label id="registration-domain-cue" class="aesthetic-50-transparent-color">@{{ domain }}</label>
          </div>
          <div class="form-item">
            <label>Display name:</label>
            <input id="handle" class="aesthetic-windows-95-text-input"
                  type="text" name="name"
                  pattern="^[A-Za-z0-9 -]{3,32}$"
                  title="Letters, numbers, spaces, &amp; dashes only, between 3 and 32 characters"
                  required/>
          </div>
          <div class="form-item">
            <label>E-mail address:</label>
            <input class="aesthetic-windows-95-text-input"
                   type="email" name="email"
                   required/>
          </div>
          <div id="registration-taken-cue" class="form-item hidden">
              <span class="aesthetic-effect-text-glitch"
                    style="color: #FF6AD5"
                    data-glitch="Username or email is already in use">
                Username or email is already in use
              </span>
          </div>
          <div id="registration-error-cue" class="form-item hidden">
              <span class="aesthetic-effect-text-glitch"
                    style="color: #FF6AD5"
                    data-glitch="An error occured. Please try again.">
                An error occured. Please try again.
              </span>
          </div>
          <div id="registration-emailed-cue" class="form-item hidden">
              Account created. Please check your email for a verification link.<br>
              You may close this tab.
          </div>
          <div class="form-item">
            <span class="aesthetic-windows-95-button">
              <button id="registration-submit-btn" type="submit">Sign up</button>
            </span>
          </div>
        </form>
      </div>
      <div id="vr-form" class="aesthetic-windows-95-container-indent none">
        If you're in VR, it's easier to login with your phone or computer.
        <ol>
          <li>Go to the immer or room you want to visit on your phone or computer</li>
          <li>Login to your immers profile</li>
          <li>When you return to the room lobby, click "Enter on Standalone VR"</li>
          <li>It will display a shortlink and code you can use to connect in VR</li>
        </ol>
      </div>
    </div>
    <div>
      Are you in VR? There's an easier way to login.
      <a id="show-vr-hint" href="#">Show more...</a>
    </div>
  </div>
{% endblock %}
{% block script%}
  <script>
    if (new URL(window.location).searchParams.has('tokenfail')) {
      document.getElementById('token-error-cue').classList.remove('hidden')
    }
    // tab toggle
    const togLogin = document.getElementById('show-login')
    const togRegister = document.getElementById('show-register')
    const togVr = document.getElementById('show-vr')
    const tabLogin = document.getElementById('login-form')
    const tabRegister = document.getElementById('register-form')
    const tabVr = document.getElementById('vr-form')
    const hintVr = document.getElementById('show-vr-hint')
    togLogin.addEventListener('click', evt => {
      togLogin.classList.add('is-active')
      tabLogin.classList.remove('none')
      togRegister.classList.remove('is-active')
      tabRegister.classList.add('none')
      togVr.classList.remove('is-active')
      tabVr.classList.add('none')
      evt.preventDefault()
    })
    function toggleRegister (evt) {
      togRegister.classList.add('is-active')
      tabRegister.classList.remove('none')
      togLogin.classList.remove('is-active')
      tabLogin.classList.add('none')
      togVr.classList.remove('is-active')
      tabVr.classList.add('none')
      if (evt) { evt.preventDefault() }
    }
    togRegister.addEventListener('click',toggleRegister)
    function toggleVr (evt) {
      togVr.classList.add('is-active')
      tabVr.classList.remove('none')
      togLogin.classList.remove('is-active')
      tabLogin.classList.add('none')
      togRegister.classList.remove('is-active')
      tabRegister.classList.add('none')
      if (evt) { evt.preventDefault() }
    }
    togVr.addEventListener('click', toggleVr)
    hintVr.addEventListener('click', toggleVr)

    // login action
    const handle = document.getElementById('handle')
    const nextBtn = document.querySelector('#next button')
    const submit = document.getElementById('submit')
    const emailedCue = document.getElementById('emailed-cue')
    const remoteCue = document.getElementById('remote-cue')
    const redirect = document.getElementById('redirect')
    const errorCue = document.getElementById('error-cue')
    let currentState
    function setLoginState (state) {
      // ignore event handler events
      if (typeof state !== 'string') { state = null }
      if (state === 'remote') {
        remoteCue.classList.remove('hidden')
        redirect.classList.remove('none')
      } else {
        remoteCue.classList.add('hidden')
        redirect.classList.add('none')
      }
      if (state === 'local') {
        emailedCue.classList.remove('hidden')
      } else {
        emailedCue.classList.add('hidden')
      }
      if (state === 'error') {
        errorCue.classList.remove('hidden')
      } else {
        errorCue.classList.add('hidden')
      }
      if (!state && handle.value) {
        nextBtn.removeAttribute('disabled')
      } else {
        nextBtn.setAttribute('disabled', true)
      }
      currentState = state
    }
    tabLogin.addEventListener('submit', function loginSubmit (event) {
      event.preventDefault()
      if (currentState === 'remote') {
        doRedirect()
      } else {
        lookup()
      }
      return false
    })
    handle.addEventListener('input', setLoginState)
    nextBtn.addEventListener('click', lookup)

    function lookup () {
      document.body.classList.add('fetching')
      nextBtn.setAttribute('disabled', true)
      let state
      window.fetch('/auth/login', {
        method: 'POST',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ handle: handle.value })
      })
        .then(res => {
          if (!res.ok) { throw new Error(res.statusText) }
          return res.json()
        })
        .then(res => {
          if (res.emailed) {
            state = 'local'
          } else if (res.redirect) {
            // go to auth flow at users home immer, returning to this hub after
            window.redirectUri = res.redirect
            state = 'remote'
          } else {
            state = 'error'
          }
        })
        .catch(err => { state = 'error' })
        .then(() => {
          document.body.classList.remove('fetching')
          setLoginState(state)
        })
    }
    function doRedirect () {
      if (redirectUri) {
        window.location = redirectUri
      }
    }
    redirect.addEventListener('click', doRedirect)

    setLoginState()

    // registration action
    const registrationForm = tabRegister.querySelector('form')
    const registrationSubmitBtn = document.getElementById('registration-submit-btn')
    const registrationErrorCue = document.getElementById('registration-error-cue')
    const registrationTakenCue = document.getElementById('registration-taken-cue')
    const registrationEmailedCue = document.getElementById('registration-emailed-cue')
    registrationForm.addEventListener('submit', function registerSubmit (event) {
      document.body.classList.add('fetching')
      registrationEmailedCue.classList.add('hidden')
      registrationTakenCue.classList.add('hidden')
      registrationErrorCue.classList.add('hidden')
      registrationSubmitBtn.setAttribute('disabled', true)
      fetch('/auth/user', {
        method: 'POST',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(Object.fromEntries(new FormData(registrationForm)))
      })
        .then(result => result.json())
        .then(obj => {
          if (obj.taken) {
            registrationTakenCue.classList.remove('hidden')
            registrationTakenCue.firstElementChild.dataset.glitch = obj.error
            registrationTakenCue.firstElementChild.textContent = obj.error
            registrationSubmitBtn.removeAttribute('disabled')
          } else if (obj.emailed) {
            registrationEmailedCue.classList.remove('hidden')
          } else {
            throw new Error(obj.error)
          }
        })
        .catch(err => {
          console.log(err.message)
          registrationErrorCue.classList.remove('hidden')
          registrationSubmitBtn.removeAttribute('disabled')
        })
        .then(() => {
          document.body.classList.remove('fetching')
        })
      event.preventDefault()
      return false
    })
  </script>
{% endblock %}
